# https://docs.linuxserver.io/faq#libseccomp

mkdir -p /home/pi/docker/{portainer,qbittorrent,downloads,h5ai,filebrowser,ngrok,qbot,duckdns}

# run as root user
docker run -d \
    --name portainer \
    --label com.centurylinklabs.watchtower.enable=true \
    --restart=unless-stopped \
    -u $UID:$GID \
    -p 8000:8000 -p 8010:9000 \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v /home/pi/docker/portainer:/data \
    portainer/portainer-ce:latest

docker run -d \
  --name=qbittorrent \
  --label com.centurylinklabs.watchtower.enable=true \
  -e PUID=$(id -u) \
  -e PGID=$(id -g) \
  -e TZ=Asia/Kolkata \
  -e WEBUI_PORT=8080 \
  -p 6881:6881 \
  -p 6881:6881/udp \
  -p 8020:8080 \
  -v /home/pi/docker/qbittorrent:/config \
  -v /home/pi/docker/downloads:/downloads \
  --restart unless-stopped \
  lscr.io/linuxserver/qbittorrent:latest

docker run -d \
  --name=h5ai \
  --label com.centurylinklabs.watchtower.enable=true \
  -p 8030:80 \
  -v /home/pi/docker/downloads:/h5ai \
  -v /home/pi/docker/h5ai:/config \
  -e PUID=$(id -u) \
  -e PGID=$(id -g) \
  -e TZ=Asia/Kolkata \
  --restart unless-stopped \
  bin20088/h5ai:latest

touch /home/pi/docker/filebrowser/filebrowser.db
# https://github.com/filebrowser/filebrowser/blob/master/docker/root/defaults/settings.json
# https://github.com/filebrowser/filebrowser/issues/534
nano /home/pi/docker/filebrowser/settings.json
{
  "port": 80,
  "baseURL": "",
  "address": "",
  "log": "stdout",
  "database": "/database/filebrowser.db",
  "root": "/srv",
  "noauth": true
}

docker run -d \
    --name=filebrowser \
    --label com.centurylinklabs.watchtower.enable=true \
    -v /home/pi/docker/downloads:/srv \
    -v /home/pi/docker/filebrowser/filebrowser.db:/database/filebrowser.db \
    -v /home/pi/docker/filebrowser/settings.json:/config/settings.json \
    -e PUID=$(id -u) \
    -e PGID=$(id -g) \
    -p 8040:80 \
    filebrowser/filebrowser:s6

# ngrok configuration
nano /home/pi/docker/ngrok/ngrok.yml

authtoken: ABC1234
region: in
console_ui: false
log_level: info
log_format: logfmt
log: stdout
web_addr: localhost:4040
tunnels:
  portainer:
    addr: 8010
    bind_tls: false
    inspect: false
    proto: http
  qbittorrent:
    addr: 8020
    bind_tls: false
    inspect: false
    proto: http
  h5ai:
    addr: 8030
    bind_tls: false
    inspect: false
    proto: http
  filebrowser:
    addr: 8040
    bind_tls: false
    inspect: false
    proto: http

docker run -d \
    --name=ngrok \
    --restart=unless-stopped \
    --net=host \
    --label com.centurylinklabs.watchtower.enable=true \
    -v /home/pi/docker/ngrok/ngrok.yml:/etc/ngrok.yml \
    -e NGROK_CONFIG=/etc/ngrok.yml \
    -u $UID:$GID \
    ngrok/ngrok:alpine start --all

# run as root user
docker run -d \
    --name watchtower \
    --restart=unless-stopped \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -e WATCHTOWER_CLEANUP=true \
    -e WATCHTOWER_REMOVE_VOLUMES=true \
    -e WATCHTOWER_INCLUDE_RESTARTING=true \
    -e WATCHTOWER_INCLUDE_STOPPED=true \
    -e WATCHTOWER_REVIVE_STOPPED=true \
    -e WATCHTOWER_ROLLING_RESTART=true \
    -e WATCHTOWER_LABEL_ENABLE=true \
    -u $UID:$GID \
    containrrr/watchtower:latest

# qbittorrent bot setup
# Login to qbittorrent web ui and go to tools -> options -> web ui
# uncheck the option "Enable Host header validation"
git clone -b dev https://github.com/sachinOraon/QBittorrentBot.git /home/pi/docker/qbot
cd /home/pi/docker/qbot
# edit the config.py
docker build . -t qbot:latest
docker run -d \
    --name=qbot \
    --restart=unless-stopped \
    --label com.centurylinklabs.watchtower.enable=false \
    --net=host \
    qbot:latest

# alternate method
# create Dockerfile
nano /home/pi/docker/qbot/Dockerfile.new
# paste following lines
FROM python:3.9-buster
COPY requirements.txt /usr/src/app/requirements.txt
WORKDIR /usr/src/app
RUN ["pip", "install", "--no-cache-dir", "-r", "requirements.txt"]
ENTRYPOINT ["python", "-u", "main.py"]
# build the image
docker build -t qbot:base -f /home/pi/docker/qbot/Dockerfile.new
# run the image
docker run -d \
    --name=qbot \
    --restart=unless-stopped \
    --label com.centurylinklabs.watchtower.enable=false \
    --net=host \
    -v /home/pi/docker/qbot:/usr/src/app \
    -e qbIp=127.0.0.1 \
    -e qbPort=PORT \
    -e qbUser=admin \
    -e qbPsw=adminadmin \
    -e TG-KEY=BOT_TOKEN \
    -e API-ID=TELEGRAM_API \
    -e API-HASH=TELEGRAM_HASH \
    qbot:base

# noip dynamic update client setup
# https://www.github.com/aanousakis/no-ip
docker run -d \
  --name=noip \
  --restart=unless-stopped \
  --label com.centurylinklabs.watchtower.enable=true \
  -e USERNAME=NOIP_USER_NAME \
  -e PASSWORD=NOIP_PASSWORD \
  -e "DOMAINS=NOIP_HOSTNAME" \
  -e INTERVAL=60 \
  aanousakis/no-ip:latest

# duckdns
docker run -d \
  --name=duckdns \
  -e PUID=$(id -u) \
  -e PGID=$(id -g) \
  -e TZ=Asia/Kolkata \
  -e SUBDOMAINS=subdomain \
  -e TOKEN=token \
  -e LOG_FILE=true \
  -v /home/pi/docker/duckdns:/config \
  --restart unless-stopped \
  --label com.centurylinklabs.watchtower.enable=true \
  lscr.io/linuxserver/duckdns
