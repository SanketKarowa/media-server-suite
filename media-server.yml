# Creates a media server suite using docker containers of
# [portainer, qBittorrent, jellyfinn, sonarr, radarr, jackett, flaresolverr, h5ai]
# if deployed on personal cloud server, then make sure to open following ports
# tcp: 9000, 6881, 8000, 8010, 8020, 8030, 8040, 8050, 8060, 8070
# udp: 6881
# also make sure they don't conflict with other running services

services:

  # portainer is an open source tool for managing containerized applications
  # credit: https://documentation.portainer.io/v2.0/deploy/ceinstalldocker/
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
      - "9000:9000/tcp"
      - "8000:8000/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer:/data

  # qBittorrent project aims to provide an open-source software alternative to ÂµTorrent
  # credit: https://gitlab.com/dedyms/qbittorrent-nox.git
  # default username: admin password: adminadmin
  qBittorrent:
    container_name: qBittorrent-nox
    image: registry.gitlab.com/dedyms/qbittorrent-nox:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - WEBPORT=8010
    ports:
      - "6881:6881/tcp"
      - "6881:6881/udp"
      - "8010:8010/tcp"
    volumes:
      # /path/to/config and /path/to/downloads must be writeable with user ID #1000
      - ./volumes/qBittorrent:/config
      - ./downloads:/home/debian/Downloads

  # h5ai is a modern file indexer for HTTP web servers with focus on your files
  # credit: https://hub.docker.com/r/awesometic/h5ai
  h5ai:
    container_name: h5ai
    image: awesometic/h5ai:latest
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata
    ports:
      - "8020:80/tcp"
    volumes:
      - ./volumes/h5ai:/config
      - ./downloads:/h5ai

  # Jackett works as a proxy server: it translates queries from apps (Sonarr, Radarr, etc)
  # into tracker-site-specific http queries, parses the html response, then sends results
  # back to the requesting software
  # credit: https://hub.docker.com/r/linuxserver/jackett
  jackett:
    container_name: jackett
    image: ghcr.io/linuxserver/jackett:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - AUTO_UPDATE=true #optional
      - TZ=Asia/Kolkata
    ports:
      - "8030:9117/tcp"
    volumes:
      - ./volumes/jackett:/config
      - ./downloads:/downloads

  # FlareSolverr is a proxy server to bypass Cloudflare protection
  # credit: https://github.com/FlareSolverr/FlareSolverr
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
    ports:
      - "8040:8191/tcp"

  # Sonarr is a PVR for Usenet and BitTorrent users.
  # credit: https://hub.docker.com/r/linuxserver/sonarr
  sonarr:
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    ports:
      - "8050:8989/tcp"
    volumes:
      - ./volumes/sonarr:/config
      # give o+rw permissions to ./downloads/tvseries
      - ./downloads/tvseries:/data/TV
      - ./downloads:/data/downloads/torrents

  # Radarr is a movie collection manager for Usenet and BitTorrent users
  # credit: https://hub.docker.com/r/linuxserver/radarr
  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    ports:
      - "8060:7878/tcp"
    volumes:
      - ./volumes/radarr:/config
      # give o+rw permissions to ./downloads/movies
      - ./downloads/movies:/data/Movies
      - ./downloads:/data/downloads/torrents

  # Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media
  # credit: https://jellyfin.org/docs/general/administration/installing.html#docker
  jellyfinn:
    container_name: jellyfinn
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    ports:
      - "8070:8096/tcp"
    volumes:
      - ./volumes/jellyfinn/config:/config
      - ./volumes/jellyfinn/cache:/cache
      - ./downloads:/media