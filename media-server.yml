# Creates a media server suite using docker containers of
# [portainer, qBittorrent, jellyfinn, sonarr, radarr, jackett, flaresolverr, h5ai]
# if deployed on personal cloud server, then make sure to open following ports
# tcp: 9000, 6881, 8000, 8010, 8020
# udp: 6881
# also make sure they don't conflict with other running services

services:

  # portainer is an open source tool for managing containerized applications
  # taken from https://documentation.portainer.io/v2.0/deploy/ceinstalldocker/
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
      - "9000:9000/tcp"
      - "8000:8000/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer:/data

  # qBittorrent project aims to provide an open-source software alternative to ÂµTorrent
  # taken from https://gitlab.com/dedyms/qbittorrent-nox.git
  # default username: admin password: adminadmin
  qBittorrent:
    container_name: qBittorrent-nox
    image: registry.gitlab.com/dedyms/qbittorrent-nox:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - WEBPORT=8010
    ports:
      - "6881:6881/tcp"
      - "6881:6881/udp"
      - "8010:8010/tcp"
    volumes:
      # /path/to/config and /path/to/downloads must be writeable with user ID #1000
      - ./volumes/qBittorrent:/config
      - ./downloads:/home/debian/Downloads

  # h5ai is a modern file indexer for HTTP web servers with focus on your files
  # taken from https://hub.docker.com/r/awesometic/h5ai
  h5ai:
    container_name: h5ai
    image: awesometic/h5ai:latest
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata
    ports:
      - "8020:80/tcp"
    volumes:
      - ./volumes/h5ai:/config
      - ./downloads:/h5ai
